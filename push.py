#!/usr/bin/env python
import requests
from pprint import pprint
from bitlyapi import BitLy
from bitlyapi.bitly import APIError
import urbanairship as ua







def setup_bitly(real_url):
    with open('bitly_url.txt', 'r') as f:
        buff = f.read().split('\n')
        bitly_url = buff[0].strip()

        #bitly_url = 'http://bit.ly/1x4fa6y'
        still_good = False
        r = requests.get(bitly_url,  allow_redirects=False)

    if r.status_code == 301:
        new = r.headers['location']
        if new == real_url:
            print "bitly url is still working"
            still_good = True
    if not still_good:
        print "bitly url no longer works, making a new one"
        username = BITLY_SMS_USERNAME
        token = BITLY_SMS_TOKEN
        bitly = BitLy(username.strip(), token.strip())
        result = bitly.shorten(longUrl=real_url)
        bitly_url = result['url']
    with open('bitly_url.txt', 'w+') as f:
        f.write(bitly_url + "\n")
        f.write('# generated by req.py\n')
    return bitly_url

class UASender(object):

    def __init__(self, app_key, master_secret, blurb=None, extra_fields=None):
        self.app_key = app_key
        self.master_secret = master_secret
        self.blurb = blurb
        self.extra_fields = extra_fields
        self.audience = ua.all_
        self.airship = ua.Airship(app_key, master_secret)

    def set_audience(self, value):
        self.audience = value

    def send(self, blurb=None, extra_fields=None):
        if blurb is None:
            if self.blurb is None:
                raise Exception('must have a blurb')
        else:
            self.blurb = blurb

        if extra_fields is None:
            if self.extra_fields is None:
                raise Exception('must have a extra_fields')
        else:
            self.extra_fields = extra_fields

        push = self.airship.create_push()
        push.device_types = ua.all_
        push.audience = self.audience
        push.notification = ua.notification(alert=self.blurb,
                                            ios=ua.push.payload.ios(alert=self.blurb, extra=self.extra_fields),
                                            android=ua.push.payload.android(alert=self.blurb, extra=self.extra_fields),
                                        )
        push.send()




if __name__=="__main__":
    # these four credentials values should be correct to have
    # real values, then placed in creds.py in this directory
    #
    BITLY_SMS_USERNAME = ""
    BITLY_SMS_TOKEN = ""
    app_key = ""
    master_secret = ""
    from creds import *

    real_url = "http://search.prod.cmgdigital.com/v2/guid/?g=https://identifiers.cmgdigital.com/medley/prod/news.medleystory/2632030/"
    only_guid = "https://identifiers.cmgdigital.com/medley/tie2/news.medleystory/2271285/"
    use_bitly = False
    if use_bitly:
        bitly_url = setup_bitly(real_url)

    if use_bitly:
        extra = {'search': bitly_url}
    else:
        extra = {'guid': only_guid}

    sender = UASender(app_key, master_secret)
    sender.send(blurb="Skakey!", extra_fields=extra)
